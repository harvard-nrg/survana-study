<!-- Home -->
<div id='pageInstall' data-role="page" data-theme="{{=config.theme.global}}" style="visibility: hidden">
    <div data-role="header">
        <h1>{{= study.title }}</h1>
    </div>

    <div data-role="content">
        <h1>
            Welcome to {{= config.brand}}! <br>
        </h1>

        <p class="ui-body ui-body-c ui-corner-all ui-inline">You are now installing the '{{= study.title }}' study as a web application on this device.
            <br>
            <br>
            Please follow the instructions below:</p>

        <br/>
        <p>
        <ol>
            <li>
                <p>Choose <strong>Add to Home Screen</strong> from Safari's toolbar menu:</p>
                <img src="img/instructions/01.png"/>
            </li>
            <li>
                <p>Set the name of the application:</p>
                <img src="img/instructions/02.png"/>
            </li>
            <li>
                <p>Launch your study from the Home screen:</p>
                <img src="img/instructions/03.png"/>
            </li>
            <li>Click on this <strong>Start</strong> button:
                <a id='start' href="#" data-role="button" data-inline="true" data-icon="arrow-r" data-iconpos="right">Start</a>
            </li>
        </ol>
        </p>

        <script type="text/javascript">
            "use strict";

            var startUrl = '';

            window['study-id'] = "{{= study_id }}";

            //This code sets up the keys and workflow, before Survana is loaded
            require(['storage', 'workflow'], function(Store, Workflow) {
                //server
                Store.put({
                    'survana-id':           "{{= server_id }}",
                    'key-id':               "{{= key.keyID }}",
                    'key-pem':              {{- JSON.stringify(key.publicKey) }},
                    'key-data':             '', //clear cached key data
                    'key-bits':             "{{= key.bits }}",
                    'store-url':            "{{- store }}"
                });

                //make sure not to overwrite any existing session information
                if (!Store.has('session-id')) {
                    Store.put({
                        'session-id':               '{{= session_id }}',
                        'session':                  0,
                        'session-timestamp':        '{{= (new Date()).valueOf() }}',
                        'session-timestamp-client': (new Date()).valueOf(),
                        'workflow':                 '{{- JSON.stringify(workflow) }}',
                        'workflow-current':         -1,
                        'workflow-wrap':            1
                    });

                    startUrl = Workflow.nextUrl();
                } else {
                    startUrl = Workflow.getCurrentUrl();
                }

                if (Store.has('app')) {
                    //Set the start page
                    document.location.hash='#' + startUrl;
                } else {
                    Store.put('app', 1);
                }

                document.getElementById('start').onclick = function () {
                    document.location.hash='#' + startUrl;
                };
            });
        </script>
    </div>

</div>
